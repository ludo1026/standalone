#set( $bean = $!{templateGenerationMap.getByClassGenId("bean_jpa_template",$!{class.getGenId()})} )
package ${bean.getPackage()};

import java.io.Serializable;
#foreach( $javaType in ${class.getGenClassAttributesByJavaTypes().keySet()} )
import ${javaType};
#end

import javax.persistence.Column;
import javax.persistence.Id;

#set( $listImport = false )
#foreach( $association in $class.getGenClassAssociations() )
#set( $bean2 = $!{templateGenerationMap.getByClassGenId("bean_template",$!{association.getClassGenId()})} )
#if( "1" != $!{association.getNbMax()} )
#if( ! $listImport )
#set( $listImport = true )
import java.util.ArrayList;
import java.util.List;
#end
#end
import $!{bean2.getPackage()}.$!{bean2.getName()};
#end

/**
 * ${bean.getName()}
 */
public class $!{bean.getName()} implements Serializable 
{
#if( $class.getGenClassAttributesByIsPrimaryKey("true").size() > 1 )
	// composite key
#else
	// simple key
#end

## simple attributes
#foreach( $attribute in $class.getGenClassAttributes() )
#if( ! $attribute.getAssociationId() )
#if( $attribute.getDescription() )
	/** $!{SU.capitalize($!{attribute.getDescription()})} */
#end
1
#set( $Column = ${attribute.get("sqlName")} ) ## '@Column(name="'+${attribute.getSqlName()}+'"' )
$Column
2
#if( ${attribute.has("size")} )
#set( $Column = $Column + ', size="'+${attribute.get("size")}+'"' )
#end
#if( $attribute.getIsPrimaryKey() == "true" )
#set( $Column = $Column + ", nullable=false" )
#end
#set( $Column = $Column + ")" )
#if( $attribute.getIsPrimaryKey() == "true" )
	@Id
#end
	$!{Column}
	private ${attribute.getJavaType()} ${SU.uncapitalize(${attribute.getJavaName()})};
#end
#end
## association attributes
#foreach( $association in $class.getGenClassAssociations() )
#set( $bean2 = $!{templateGenerationMap.getByClassGenId("bean_template",$!{association.getClassGenId()})} )
#if( $association.getDescription() )
	/** $!{SU.capitalize($!{association.getDescription()})} */
#end
#if( "1" == $!{association.getNbMax()} )
	private $!{SU.capitalize($!{bean2.getName()})} $!{SU.uncapitalize($!{association.getJavaName()})};
#end
#if( "1" != $!{association.getNbMax()} )
	private List<$!{SU.capitalize($!{bean2.getName()})}> $!{SU.uncapitalize($!{association.getJavaName()})}s = new ArrayList<$!{SU.capitalize($!{bean2.getName()})}>();
#end
#end

#foreach( $attribute in $class.getGenClassAttributes() )
#if( ! $attribute.getAssociationId() )
    public $!{attribute.getJavaType()} get$!{SU.capitalize($!{attribute.getJavaName()})}() {
        return $!{SU.uncapitalize($!{attribute.getJavaName()})};
    }
    
    public void set$!{SU.capitalize($!{attribute.getJavaName()})}($!{attribute.getJavaType()} $!{SU.uncapitalize($!{attribute.getJavaName()})}) {
        this.$!{SU.uncapitalize($!{attribute.getJavaName()})} = $!{SU.uncapitalize($!{attribute.getJavaName()})};
    }
	
#end
#end
#foreach( $association in $class.getGenClassAssociations() )
#set( $bean2 = $!{templateGenerationMap.getByClassGenId("bean_template",$!{association.getClassGenId()})} )
#if( "1" == $!{association.getNbMax()} )
    public $!{bean2.getName()} get$!{SU.capitalize($!{association.getJavaName()})}() {
        return $!{SU.uncapitalize($!{association.getJavaName()})};
    }
    
    public void set$!{SU.capitalize($!{association.getJavaName()})}($!{SU.capitalize($!{bean2.getName()})} $!{SU.uncapitalize($!{association.getJavaName()})}) {
        this.$!{SU.uncapitalize($!{association.getJavaName()})} = $!{SU.uncapitalize($!{association.getJavaName()})};
    }
#end
#if( "1" != $!{association.getNbMax()} )
    public List<$!{SU.capitalize($!{bean2.getName()})}> get$!{SU.capitalize($!{association.getJavaName()})}() {
        return $!{SU.uncapitalize($!{association.getJavaName()})}s;
    }
    
    public void add$!{SU.capitalize($!{association.getJavaName()})}($!{SU.capitalize($!{bean2.getName()})} $!{SU.uncapitalize($!{association.getJavaName()})}) {
        this.$!{SU.uncapitalize($!{association.getJavaName()})}s.add($!{SU.uncapitalize($!{association.getJavaName()})});
    }
#end

#end
}
